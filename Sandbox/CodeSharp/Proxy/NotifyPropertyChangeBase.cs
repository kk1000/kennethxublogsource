using System.ComponentModel;

namespace CodeSharp.Proxy
{
    /// <summary>
    /// The default base class of proxies generated by <see cref="NotifyPropertyChangeFactory"/>.
    /// </summary>
    public class NotifyPropertyChangeBase : INotifyPropertyChanged
    {
        /// <summary>
        /// Occurs when a property value changes.
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raise <see cref="PropertyChanged"/> event for the propery
        /// specified by <paramref name="propertyName"/>.
        /// </summary>
        /// <param name="propertyName">
        /// The name of the property that is changed.
        /// </param>
        protected void OnPropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged != null)
                propertyChanged(this, new PropertyChangedEventArgs("propertyName"));
        }
    }
}